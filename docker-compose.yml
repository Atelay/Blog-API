version: '3.9'

services:

  postgres:
    image: postgres:16.1
    container_name: blog_db
    ports:
      - $POSTGRES_PORT:5432
    env_file:
      - .env
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blog
    healthcheck:
      test: "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"
      interval: 2s
      timeout: 15s

  redis:
    image: redis:7.2.4
    container_name: blog_redis
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=$REDIS_PASS
    command: [ "--maxmemory", "250mb" ]
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - blog
    healthcheck:
      test: "redis-cli --raw ping"
      interval: 2s
      timeout: 15s

  backend:
    image: backend_image_blog
    build:
      context: .
    container_name: backend_blog
    env_file:
      - .env
    entrypoint: sh "scripts/backend_app.sh"
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    networks:
      - blog

networks:
  blog:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
